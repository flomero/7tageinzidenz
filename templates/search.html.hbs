<!DOCTYPE html>
<html lang="de">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="INDEX,FOLLOW" />
  <meta name="description" content="Informationseite, die die 7-Tage-Inzidenz f√ºr COVID-19 anzeigt." />
  <meta name="keywords" content="Covid Corona Inzidenz RKI" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:title" content="Inzidenz.com ‚Äì COVID-19-Inzidenzzahlen" />
  <meta name="twitter:description" content="Einfach die 7-Tage-Corona-Inzidenz f√ºr deinen Kreis herausfinden!" />
  <meta name="twitter:image" content="https://inzidenz.com/static/twitterpreview.png" />
</head>
  <title>COVID19 7-Tage-Inzidenz</title>
  <link rel="stylesheet" href="static/css/bulma.min.css" />
  <script src="static/axios.min.js"></script>
  <script src="static/luxon.min.js"></script>
  <script src="static/jets.min.js"></script>
  <script src="static/bar.js"></script>
  <link rel="icon" href="data:image/svg+xml,&lt;svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22&gt;&lt;text y=%22.9em%22 font-size=%2290%22&gt;ü¶†&lt;/text&gt;&lt;/svg&gt;">
  <style>
    html {
      height: 100vh; 
      height: calc(var(--vh, 1vh) * 100);
      overflow: hidden
    }
    .hero.is-fullheight {
      min-height: calc(var(--vh, 1vh) * 100) !important;
    }
    #go-button {
      color: #2a2a2a
    }
  </style>
</head>

<body>
    <section id="all" class="hero is-fullheight is-info is-bold">
    <div class="hero-body" style="flex-direction:col">
      <div class="container box has-text-centered">
        <h1
          class="has-text-weight-bold has-text-centered pb-5 has-text-dark
          is-size-4-touch is-size-2-desktop">
            ü¶† 7-Tage-Inzidenz COVID-19
        </h1>
        <h2 class="subtitle has-text-dark">
            Erfahre die aktuelle
            <a id="open-modal" class="has-text-link" href="">‚Ñπ&nbsp;Inzidenzzahl</a>
            deiner Stadt/deines Kreises:
        </h2>
        <form class="dropdown" id="dropdown">
          <div class="dropdown-trigger">
            <div class="field is-expanded">
              <div class="field has-addons">
                <div class="control">
                  <input
                    id="locality-dropdown"
                    type="search"
                    class="input"
                    autocomplete="off"
                    onfocus="show()"
                    onfocusout="setTimeout(hide, 300)"
                    aria-label="Kreis f√ºr den die Inzidenzzahl herausgefunden werden soll"
                    >
                </div>
                <p class="control">
                  <button
                    class="button is-info has-text-weight-bold"
                    id="go-button"
                    >
                    Los!
                  </button>
                </p>
              </div>
            </div>
          </div>
          <div class="dropdown-menu">
            <div class="dropdown-content" id="dropdown-list">
            </div>
          </div>
        </form>
        <p class="pt-5">Stay safe and wear a mask! üò∑</p>
        <p>Erstellt mit den Daten des <a href="https://rki.de" target="_blank" rel=‚Äúnoopener noreferrer‚Äú>RKI</a> üíô</p>
        <hr>
        <a href="mailto:inzidenz@krisenkultur.de">Kontakt</a>
      </div>
    </div>
    </section>

    <div class="modal">
      <div class="modal-background"></div>
      <div class="modal-card">
        <header class="modal-card-head">
          <p class="modal-card-title">Inzidenzzahl</p>
          <button class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
          Die 7-Tage-Inzidenz oder Inzidenzzahl ist die Anzahl von neuen Coronaf√§llen der letzten 7 Tage pro 100.000 Einwohner:innen in einem Gebiet.
          Sie ist ausschlaggebend f√ºr das Veranlassen weiterer Ma√ünahmen. <br> <br>
          Bitte beachten Sie, dass nicht √ºberall die Daten des RKI als Grundlage f√ºr Ma√ünahmen gelten und einzelne Orte und Bundesl√§nder ihre eigenen Daten verwenden. Diese stehen uns leider nicht zur Verf√ºgung.
        </section>
        <footer class="modal-card-foot">
          <button class="button is-info okay">Okay</button>
        </footer>
      </div>
    </div>
  <script>
    topbar.show(); 
    topbar.config({
      barThickness: 5,
      barColors: {
        0: "rgba(1,  188, 188, .7)",
        ".3": "rgba(31,  128, 185, .7)",
        "1.0": "rgba(26,  188, 156, .7)",
      },
    });

let vh = window.innerHeight * 0.01;

document.documentElement.style.setProperty('--vh', `${vh}px`);


window.addEventListener('resize', () => {
  
  let vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', `${vh}px`);
});


      
let dropdownList = document.getElementById('dropdown-list');
let goButton = document.getElementById('go-button');


const url = 'static/landkreise.json';

fetch(url)  
  .then(  
    function(response) {  
      if (response.status !== 200) {  
        console.warn('Looks like there was a problem. Status Code: ' + response.status);  
        return;  
      }

      // Examine the text in the response  
      response.json().then(function(data) {  
        var item;
    
    	  for (let i = 0; i < data.length; i++) {
            item = document.createElement('a');
            item.classList.add('dropdown-item');
            item.classList.add('has-text-left');
            item.setAttribute("href", data[i].Name.replace(' ', '+'));
      	    item.text = data[i].Name;
      	    dropdownList.appendChild(item);
        } 
        topbar.hide();
    	  var results = [];
        var jets = new Jets({
          searchTag: '#locality-dropdown',
          contentTag: '#dropdown-list',
          didSearch: () => {
            results.length > 0 && results[0].classList.remove('is-active');
            results =
            Array.from(dropdownList.children)
              .filter((element) =>
                window.getComputedStyle(element).display !== "none");
            if (results.length > 0) {
              results[0].classList.add('is-active');
              goButton.removeAttribute('disabled');
            } else {
              goButton.setAttribute('disabled', '');
            }
          }
        });

        let form = document.getElementsByTagName('form')[0];
        form.addEventListener('submit', (event) => {
          event.preventDefault();

          if (results.length >= 1) {
            window.location.href = results[0].getAttribute('href');
          }
        });
      });  
    }  
  )  
  .catch(function(err) {  
    console.error('Fetch Error -', err);  
  });

  function show() {
  document.getElementById("dropdown").classList.add("is-active");
}
function hide() {
  document.getElementById("dropdown").classList.remove("is-active");
}

document.querySelector('a#open-modal').addEventListener('click', function(event) {
  event.preventDefault();
  var modal = document.querySelector('.modal');  // assuming you have only 1
  var html = document.querySelector('html');
  modal.classList.add('is-active');
  html.classList.add('is-clipped');

  modal.querySelector('.modal-background').addEventListener('click', function(e) {
    e.preventDefault();
    modal.classList.remove('is-active');
    html.classList.remove('is-clipped');
  });
  modal.querySelector('.delete').addEventListener('click', function(e) {
    e.preventDefault();
    modal.classList.remove('is-active');
    html.classList.remove('is-clipped');
  });
  modal.querySelector('.okay').addEventListener('click', function(e) {
    e.preventDefault();
    modal.classList.remove('is-active');
    html.classList.remove('is-clipped');
  });
});
  </script>

<style>
    html {
  height: 100vh; 
  height: calc(var(--vh, 1vh) * 100);
}
.hero.is-fullheight {
  min-height: calc(var(--vh, 1vh) * 100) !important;
}
  </style>


</body>
</html>
